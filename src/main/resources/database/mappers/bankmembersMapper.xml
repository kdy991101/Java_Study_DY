<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
		    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--namespace의 값은 사용할 DAO의 풀패키지명 -->	
    
<mapper namespace="com.iu.start.bankMembers.BankMembersDAO">

<insert id="setAddFile" parameterType="BankMembersFileDTO">
	INSERT  INTO MEMBERFILE (FILENUM, FILENAME, ORINAME, USERNAME)
	 VALUES(FILE_SEQ.NEXTVAL, #{fileName}, #{oriName}, #{userName})
</insert>

<select id="getlogin" parameterType="BankMembersDTO" resultMap="getLoginResult">
	SELECT M.USERNAME, M.NAME, R.ROLENUM, R.ROLENAME
	FROM MEMBERS M
	INNER JOIN
	MEMBER_ROLE MR
	ON M.USERNAME = MR.USERNAME
	INNER JOIN
	ROLE R
	ON MR.ROLENUM=R.ROLENUM
	WHERE M.USERNAME=#{username} AND M.PASSWORD=#{password}
	ORDER BY R.ROLENUM DESC
</select>

<resultMap type="BankMembersDTO" id="getLoginResult">
	<id column="USERNAME" property="username"/>
	<result column="NAME" property="name"/>	
	
	<collection property="roleDTOs" javaType="List" ofType="RoleDTO">
	<!-- ofType="RoleDTO"=>제네릭 -->
		<id column="ROLENUM" property="roleNum"/>
		<result column="ROLENAME" property="roleName"/>
	</collection>
</resultMap>

<insert id="setJoin" parameterType="BankMembersDTO">
INSERT INTO MEMBERS VALUES(#{username},#{password},#{name},#{email},#{phone})
</insert>

<select id="getSearchByID" parameterType="String" 
								resultType="BankMembersDTO">
SELECT * FROM MEMBERS WHERE USERNAME LIKE '%'||#{search}||'%' ORDER BY USERNAME ASC
</select>

<select id="getMyPage" parameterType="BankMembersDTO" resultMap="getMyPageResult">
		 SELECT MB.USERNAME, NAME, EMAIL, PHONE, FILENUM, FILENAME, ACCOUNTNUM, BOOKNAME, ACCOUNTDATE
		 FROM MEMBERS MB
    
			LEFT JOIN
			MEMBERFILE MF
			ON MB.USERNAME = MF.USERNAME
		
		    LEFT JOIN
		    BANKACCOUNT BA
		    ON MB.USERNAME = BA.USERNAME
		    
		    LEFT JOIN
		    BANKBOOK BB
		    ON BA.BOOKNUM = BB.BOOKNUM
	        WHERE MB.USERNAME=#{username}
</select>

		<resultMap type="BankMembersDTO" id="getMyPageResult">
			<id column="USERNAME" property="username"/>
			<result column="NAME" property="name"/>
			<result column="EMAIL" property="email"/>
			<result column="PHONE" property="phone"/>
															<!-- ofType 제네릭을 뭏어보는 것 -->
			<association property="bankMembersFileDTO" javaType="BankMembersFileDTO">
				<id column="FILENUM" property="fileNum"/>
				<result column="FILENAME" property="fileName"/>
			</association>
			
			<collection property="bankAccountDTOs" javaType="List" ofType="BankAccountDTO"><!-- 리스트로 받는 것 -->
				<id column="ACCOUNTNUM" property="accountNum"/><!-- 프라이머리키 -->
				<result column="ACCOUNTDATE" property="accountDate"/><!-- 그 외 나머지 -->
				
				<association property="bankBookDTO" javaType="BankBookDTO"><!-- 하나만 받는것..? -->
					<result column="BOOKNAME" property="bookName"/>
				</association>			
			</collection>
		</resultMap>
</mapper>
